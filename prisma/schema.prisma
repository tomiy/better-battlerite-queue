// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    output   = "../.prisma"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Guild {
    id                 Int     @id @default(autoincrement())
    guildDiscordId     String  @unique
    botCommandsChannel String?
    queueChannel       String?
    botModRole         String?
    registeredRole     String?
    queueRole          String?
    users              User[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id            Int    @id @default(autoincrement())
    userDiscordId String @unique
    guild         Guild  @relation(fields: [guildId], references: [id])
    guildId       Int
    inGameName    String
    elo           Int    @default(1000)

    queue     Queue?
    MatchUser MatchUser[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Queue {
    id     Int  @id @default(autoincrement())
    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Match {
    id    Int         @id @default(autoincrement())
    teams MatchTeam[]
    state MatchState  @default(NEW)

    team1Channel String?
    team2Channel String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MatchTeam {
    id      Int         @id @default(autoincrement())
    match   Match       @relation(fields: [matchId], references: [id])
    matchId Int
    users   MatchUser[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model MatchUser {
    id     Int       @id @default(autoincrement())
    user   User      @relation(fields: [userId], references: [id])
    userId Int
    team   MatchTeam @relation(fields: [teamId], references: [id])
    teamId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum MatchState {
    NEW
    DRAFT
    ONGOING
    FINISHED
}
